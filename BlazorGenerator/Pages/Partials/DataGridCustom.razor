@typeparam T


<DataGridColumn TItem="T"
                Field="@Field.Name"
                Caption="@Field.Caption"
                Editable="true"
                DisplayOrder="@Order"
                Filterable="true"
                Displayable="@(!Field.EditOnly)" Width="@Field.Width" SortDirection="@Field.Sort" Groupable="@Field.Groupable">
    <FilterTemplate>
        <TextEdit Text="@selectedFilter"
                  TextChanged="@((v) => {selectedFilter = v; Parent.AddFilter(Field, v); ParentGrid.Reload();})">
        </TextEdit>
    </FilterTemplate>
    <DisplayTemplate>
        <Tooltip Text="@(Field.ToolTip?.Invoke(context) ?? Field.Name)">
            <Text>
                @((string)Field.Getter(context)?.ToString())
                </Text>
            </Tooltip>
        </DisplayTemplate>
        <EditTemplate>
            <TextEdit Text="@((string) Field.Getter(context.Item)?.ToString())"
                  TextChanged="@((v) => {
                                                                        Field.Setter(context.Item, v);
                                                                        context.CellValue = Field.Getter(context.Item);
                                                                    })"
                  Placeholder="@Field.Caption"
                      ReadOnly="@(!Field.Editable)">
            </TextEdit>
        </EditTemplate>
    </DataGridColumn>

    @code {
    [Parameter]
    public VisibleField<T> Field { get; set; }
    [Parameter]
    public int Order { get; set; }

    [CascadingParameter]
    BlazorgenBaseComponent Parent { get; set; }

    [CascadingParameter]
    DataGrid<T> ParentGrid { get; set; }

    string selectedFilter { get; set; }
}
