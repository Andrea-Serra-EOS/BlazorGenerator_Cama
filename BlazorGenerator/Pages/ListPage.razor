@inject BlazorGenSecurity security
@{
    var PageActions = AttributesUtils.GetMethodsWithAttribute<PageActionAttribute>(this);
    var permissionSet = security.GetPermissionSet(this.GetType());
}
@typeparam T
@inherits BlazorgenBaseComponent

<Div Class="sticky-top">
    <Actions PageActions="@PageActions" Context="this"></Actions>
</Div>
<Container Fluid Class="flex-grow-1 max-vh-100">
    <CascadingValue Value="(BlazorgenBaseComponent)this">
        <CascadingValue Value="_datagrid">
            <DataGrid TItem="T"
                      @ref="@_datagrid"
                      Data="@Data"
                      @bind-SelectedRows="@SelectedRecs"
                      @bind-SelectedRow="@SelectedRec"
                      SelectionMode="@SelectionMode"
                      Resizable="true"
                      Striped="true"
                      ShowPager="false"
                      ShowPageSizes="false"
                      FixedHeaderDataGridHeight="80vh"
                      FixedHeaderDataGridMaxHeight="100vh"
                      Virtualize
                      VirtualizeOptions="@(new VirtualizeOptions(){
                      DataGridHeight="80vh",
                      DataGridMaxHeight="100vh"

})"
                      Class="flex-grow-1"
                      PageSize="int.MaxValue"
                      Filterable="true"
                      Responsive="true"
                      Narrow="true"
                      FixedHeader="true"
                      Editable
                      EditMode="@GetEditMode()"
                      NewItemCreator="@CreateNewItem"
                      RowInserted="@OnInsert"
                      HeaderThemeContrast="ThemeContrast.Light"
                      RowStyling="@RowStyling"
                      RowRemoved="@OnDelete"
                      RowUpdated="@OnModify"
                      CommandMode="DataGridCommandMode.Commands"
                      Groupable="GroupByEnabled()"
                      GroupBy="GroupBy"
                      CustomFilter="@OnCustomFilter">

                <DataGridColumns>
                    @if (SelectionMode == DataGridSelectionMode.Multiple)
                    {
                        <DataGridMultiSelectColumn TItem="T" Width="30px"></DataGridMultiSelectColumn>
                    }
                    <DataGridCommandColumn Width="150px" TItem="T" NewCommandAllowed="permissionSet.Insert" EditCommandAllowed="permissionSet.Modify" DeleteCommandAllowed="permissionSet.Delete">

                        <NewCommandTemplate>
                            <Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked">
                                <Span>
                                    <Icon Display="Display.Inline" Name="IconName.Add"></Icon>&nbsp;@context.LocalizationString
                                </Span>
                            </Button>
                        </NewCommandTemplate>
                        <EditCommandTemplate>
                            <Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked">

                                <Icon Display="Display.Inline" Name="IconName.Edit"></Icon>&nbsp;@context.LocalizationString

                            </Button>
                        </EditCommandTemplate>
                        <SaveCommandTemplate>
                            <Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" PreventDefaultOnSubmit Clicked="@context.Clicked">@context.LocalizationString</Button>
                        </SaveCommandTemplate>
                        <DeleteCommandTemplate>
                            <Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Display="Display.Inline" Name="IconName.Delete"></Icon>&nbsp;@context.LocalizationString</Button>
                        </DeleteCommandTemplate>
                        <CancelCommandTemplate>
                            <Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked">@context.LocalizationString</Button>
                        </CancelCommandTemplate>
                        <ClearFilterCommandTemplate>
                            <Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Display="Display.Inline" Name="IconName.Clear"></Icon>&nbsp;@context.LocalizationString</Button>
                        </ClearFilterCommandTemplate>
                        </DataGridCommandColumn>
                        @foreach (var fld in VisibleFields)
                    {
                        switch (fld.FieldType)
                        {
                            case BlazorGenerator.Enum.FieldType.Numeric:
                                <BlazorGenerator.Pages.Partials.DataGridNumeric T="T" Field="fld" Order="@(VisibleFields.IndexOf(fld))" />
                                break;
                            case BlazorGenerator.Enum.FieldType.Boolean:
                                <BlazorGenerator.Pages.Partials.DataGridCheckbox T="T" Field="fld" Order="@(VisibleFields.IndexOf(fld))" />
                                break;
                            case BlazorGenerator.Enum.FieldType.Custom:
                                <BlazorGenerator.Pages.Partials.DataGridCustom T="T" Field="fld" Order="@(VisibleFields.IndexOf(fld))" />
                                break;
                            case BlazorGenerator.Enum.FieldType.Select:
                                <BlazorGenerator.Pages.Partials.DataGridDropdown T="T" Field="fld" Order="@(VisibleFields.IndexOf(fld))" />
                                break;
                            case BlazorGenerator.Enum.FieldType.Button:
                                break;

                            case BlazorGenerator.Enum.FieldType.Icon:
                                <BlazorGenerator.Pages.Partials.DataGridIcon T="T" Field="fld" Order="@(VisibleFields.IndexOf(fld))" />
                                break;
                            default:
                                <DataGridColumn TItem="T"
                                    Field="@fld.Name"
                                    Caption="@fld.Caption"
                                    Sortable="true" SortDirection="@fld.Sort"
                                    Filterable="true" Editable="true" Displayable="@(!fld.EditOnly)" DisplayOrder="@(VisibleFields.IndexOf(fld))" Width="@fld.Width" />
                                break;
                        }
                    }
                </DataGridColumns>

            </DataGrid>
        </CascadingValue>
    </CascadingValue>
</Container>
