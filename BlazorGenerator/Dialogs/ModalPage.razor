@typeparam T


<Card>
    <CardHeader>
        <CardTitle>@Title</CardTitle>
    </CardHeader>
    <CardBody>
        <Form>
            <br />
            <Fields>
                @foreach (var fld in VisibleFields)
                {
                    <Field ColumnSize="@fld.ColumnSize" Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is3">@(fld.Caption): </FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is9">
                            @switch (fld.FieldType)
                            {
                                case BlazorGenerator.Enum.FieldType.Numeric:
                                    <BlazorGenerator.Pages.Partials.Numeric T="T" Data="Data" Field="fld" />
                                    break;
                                case BlazorGenerator.Enum.FieldType.Boolean:
                                    <BlazorGenerator.Pages.Partials.Checkbox T="T" Data="Data" Field="fld" />
                                    break;
                                case BlazorGenerator.Enum.FieldType.Select:
                                    <BlazorGenerator.Pages.Partials.Dropdown T="T" Data="Data" Field="fld" />
                                    break;
                                case BlazorGenerator.Enum.FieldType.Button:
                                    <BlazorGenerator.Pages.Partials.Btn T="T" Data="Data" Field="fld" />
                                    break;
                                case BlazorGenerator.Enum.FieldType.Custom:
                                    <BlazorGenerator.Pages.Partials.Custom T="T" Data="Data" Field="fld" />
                                    break;
                                default:
                                    <BlazorGenerator.Pages.Partials.Txt T="T" Data="Data" Field="fld" />
                                    break;
                            }
                        </FieldBody>
                    </Field>
                }
            </Fields>
            <br />
            @if (ShowSave)
            {
                <Button Clicked="@(() => {
						if(ShowSave)
						  onSave.InvokeAsync(_data);
						})" Color="Color.Secondary" Float="Float.End" Type="ButtonType.Submit" PreventDefaultOnSubmit="true">
                    Save
                </Button>
            }
        </Form>
    </CardBody>
</Card>