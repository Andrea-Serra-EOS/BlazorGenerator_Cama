@typeparam T
@inherits BlazorgenComponentBase

@{
  var PageActions = AttributesUtils.GetMethodsWithAttribute<PageActionAttribute>(this);
  var permissionSet = Security?.GetPermissionSet(this.GetType());
}
<PageTitle>@Title</PageTitle>
@if (ShowActions)
{
  <ActionBar Context="this" PageActions="PageActions" />
}
else
{
  <h2>@Title</h2>
}
<div style="padding:10px;">
  <FluentGrid Spacing="3">
    @foreach (var context in VisibleFields)
    {
      <FluentGridItem md="GridSize">
        <FluentStack VerticalAlignment="VerticalAlignment.Center">
          <BlazorGeneratorFormFields Data="Content" field="context" T="T" />
        </FluentStack>
      </FluentGridItem>
    }
    @if (ShowButtons)
    {
      <FluentGridItem md="GridSize">
        <FluentStack VerticalAlignment="VerticalAlignment.Center">
          @if ((permissionSet?.Modify ?? false) || (permissionSet?.Insert ?? false))
          {
            <FluentButton OnClick="@(() => HandleSave(_data!))">Save</FluentButton>
          }
          @if (permissionSet?.Delete ?? false)
          {
            <FluentButton OnClick="@(() => HandleDiscard(_data!))">Cancel</FluentButton>
          }
        </FluentStack>
      </FluentGridItem>
    }
  </FluentGrid>
</div>