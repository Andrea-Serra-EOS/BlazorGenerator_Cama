@{
	var PageActions = AttributesUtils.GetMethodsWithAttribute<PageActionAttribute>(this);
	var BasicActions = AttributesUtils.GetModelsWithAttribute<BasicActionsAttribute>(this).FirstOrDefault() ?? new BasicActionsAttribute(false, false, false);
}
@typeparam T
@inherits BlazorgenBaseComponent

<Layout>
	<LayoutHeader Fixed="true">
		<ActionBar PageActions="@PageActions" Context="this"></ActionBar>
	</LayoutHeader>
	<LayoutContent>
		<DataGrid TItem="T"
				  @ref="@_datagrid"
				  Data="@Data"
				  SelectionMode="@SelectionMode"
				  @bind-SelectedRows="@SelectedRecs"
				  @bind-SelectedRow="@SelectedRec"
				  Resizable="true"
				  Striped="true"
				  ShowPager="false"
				  ShowPageSizes="false"
				  PageSize="int.MaxValue"
				  Filterable="true"
				  Responsive="true"
				  Narrow="true"
				  Editable
				  EditMode="@GetEditMode()"
				  NewItemCreator="@CreateNewItem"
				  RowInserted="@OnInsert"
				  RowRemoved="@OnDelete"
				  RowUpdated="@OnModify"
				  CommandMode="DataGridCommandMode.Commands">

			<DataGridColumns>
				@if (SelectionMode == DataGridSelectionMode.Multiple)
				{
					<DataGridMultiSelectColumn TItem="T" Width="30px"></DataGridMultiSelectColumn>
				}
				<DataGridCommandColumn TItem="T" NewCommandAllowed="BasicActions.NewAction" EditCommandAllowed="BasicActions.EditAction" DeleteCommandAllowed="BasicActions.DeleteAction">
					<NewCommandTemplate>
						<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Add"></Icon>&nbsp;@context.LocalizationString</Button>
					</NewCommandTemplate>
					<EditCommandTemplate>
						<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Edit"></Icon>&nbsp;@context.LocalizationString</Button>
					</EditCommandTemplate>
					<SaveCommandTemplate>
						<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" PreventDefaultOnSubmit Clicked="@context.Clicked">@context.LocalizationString</Button>
					</SaveCommandTemplate>
					<DeleteCommandTemplate>
						<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Delete"></Icon>&nbsp;@context.LocalizationString</Button>
					</DeleteCommandTemplate>
					<CancelCommandTemplate>
						<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked">@context.LocalizationString</Button>
					</CancelCommandTemplate>
					<ClearFilterCommandTemplate>
						<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Clear"></Icon>&nbsp;@context.LocalizationString</Button>
					</ClearFilterCommandTemplate>
				</DataGridCommandColumn>
				@foreach (var fld in VisibleFields)
				{
					switch (fld.FieldType)
					{
						case BlazorGenerator.Enum.FieldType.Numeric:
							<BlazorGenerator.Components.Partials.DataGridNumeric T="T" Field="fld" />
							break;
						case BlazorGenerator.Enum.FieldType.Boolean:
							<BlazorGenerator.Components.Partials.DataGridCheckbox T="T" Field="fld" />
							break;
						case BlazorGenerator.Enum.FieldType.Custom:
							<BlazorGenerator.Components.Partials.DataGridCustom T="T" Field="fld" />
							break;
						case BlazorGenerator.Enum.FieldType.Select:
							<BlazorGenerator.Components.Partials.DataGridDropdown T="T" Field="fld" />
							break;
						case BlazorGenerator.Enum.FieldType.Button:
							break;

						case BlazorGenerator.Enum.FieldType.Icon:
							<BlazorGenerator.Components.Partials.DataGridIcon T="T" Field="fld" />
							break;
						default:
							<DataGridColumn TItem="T"
								Field="@fld.Name"
								Caption="@fld.Caption"
								Sortable="true"
								Filterable="true" Editable="true" Displayable="@(!fld.EditOnly)" />
							break;
					}
				}
			</DataGridColumns>

		</DataGrid>
	</LayoutContent>
</Layout>

<Modal @ref="@ModalRef" Closing="OnModalClose">
	<ModalContent Centered Size="@modalSize">
		<ModalHeader>
			<CloseButton />
		</ModalHeader>
		<ModalBody ChildContent="@ChildModalContent" />
	</ModalContent>
</Modal>