
  <FluentGrid Style="overflow: auto; flex: 0 0 auto; margin-bottom: 5px" Justify="JustifyContent.FlexStart">
    <FluentGridItem xs="12" sm="6"  md="0">
      <FluentLabel Typo="Typography.PaneHeader" Style="vertical-align:text-top;">
        @((Context as BlazorgenComponentBase)?.Title)
      </FluentLabel>
    </FluentGridItem>

    @{
      PopulateDictionary();
      foreach (var item in ActionGroups)
      {
        var filtered = PageActions.Where(o =>
  o.Attribute.Group == item.Key);
        if (item.Key.ToLower() == "default" || item.Value == 1)
        {
          foreach (var action in filtered)
          {
            <FluentGridItem xs="12" sm="6" md="0">
              <FluentButton OnClick="@(() => action.Method.Invoke(Context, null))">
                @(action.Attribute.Caption ?? action.Method.Name)
                <span slot="start">
                  <FluentIcon Value="@(action.Attribute.Icon.ToFluentIcon())" Slot="start" Color="Color.Neutral" />
                </span>
              </FluentButton>
            </FluentGridItem>
          }
        }
        else
        {

          PopOverBind.TryAdd(@item.Key, false);

          <FluentGridItem xs="12" sm="6" md="0">
            <FluentButton id="@item.Key" @onclick="() => PopOverBind[item.Key] = !PopOverBind[item.Key]">
              @item.Key
              <FluentIcon Value="@( new Icons.Regular.Size16.ChevronDown())" Slot="end" Color="Color.Neutral" />
            </FluentButton>
          </FluentGridItem>
          <FluentPopover AnchorId="@item.Key" @bind-Open="PopOverBind[item.Key]" HorizontalPosition="HorizontalPosition.Right">
            <Body>
              @foreach (var action in filtered)
              {
                <FluentButton OnClick="@(() => action.Method.Invoke(Context, null))">
                  @(action.Attribute.Caption ?? action.Method.Name)
                  <span slot="start">
                    <FluentIcon Value="@action.Attribute.Icon.ToFluentIcon()" Slot="start" Color="Color.Neutral" />
                  </span>
                </FluentButton>
              }
            </Body>
          </FluentPopover>

        }
      }

    }

  </FluentGrid>

<style>
  .fluent-popover-content {
    padding: 5px !important;
  }
</style>


