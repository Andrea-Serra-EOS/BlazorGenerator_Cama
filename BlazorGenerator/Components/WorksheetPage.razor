@{
	var PageActions = AttributesUtils.GetMethodsWithAttribute<PageActionAttribute>(this);
	var BasicActions = AttributesUtils.GetModelsWithAttribute<BasicActionsAttribute>(this).FirstOrDefault() ?? new BasicActionsAttribute(false, false, false);
}
@typeparam T
@typeparam TList
@inherits BlazorgenBaseComponent

<h3>@Title</h3>

<Layout>
	<LayoutHeader Fixed="true">
		<ActionBar PageActions="@PageActions" Context="this"></ActionBar>
	</LayoutHeader>
	<LayoutContent>
		<Card Margin="Margin.Is4.FromBottom">
			<CardHeader>
				<CardTitle>@Title</CardTitle>
			</CardHeader>
			<CardBody>
				<Fields>
					@foreach (var fld in VisibleFields)
					{
						<Field ColumnSize="@fld.ColumnSize" Horizontal="true">
							<FieldLabel ColumnSize="ColumnSize.Is3">@(fld.Caption): </FieldLabel>
							<FieldBody ColumnSize="ColumnSize.Is9">
								@switch (fld.FieldType)
								{
									case BlazorGenerator.Enum.FieldType.Numeric:
										<BlazorGenerator.Components.Partials.Numeric T="T" Data="Data" Field="fld" />
										break;
									case BlazorGenerator.Enum.FieldType.Boolean:
										<BlazorGenerator.Components.Partials.Checkbox T="T" Data="Data" Field="fld" />
										break;

									case BlazorGenerator.Enum.FieldType.Select:
										<BlazorGenerator.Components.Partials.Dropdown T="T" Data="Data" Field="fld" />
										break;
									case BlazorGenerator.Enum.FieldType.Button:
										<BlazorGenerator.Components.Partials.Btn T="T" Data="Data" Field="fld" />
										break;
									default:
										<BlazorGenerator.Components.Partials.Txt T="T" Data="Data" Field="fld" />
										break;
								}
							</FieldBody>
						</Field>
					}

				</Fields>
				<br />
				<DataGrid TItem="TList"
						  @ref="@_datagrid"
						  Data="@ListData"
						  SelectionMode="DataGridSelectionMode.Multiple"
						  @bind-SelectedRows="@SelectedRecs"
						  Resizable="true"
						  Striped="true"
						  ShowPager="false"
						  ShowPageSizes="false"
						  PageSize="int.MaxValue"
						  Filterable="true"
						  Responsive="true"
						  Narrow="true"
						  Editable
						  EditMode="@GetEditMode()"
						  NewItemCreator="@CreateNewItem"
						  RowInserted="@OnInsert"
						  RowRemoved="@OnDelete"
						  RowUpdated="@OnModify"
						  CommandMode="DataGridCommandMode.Commands">

					<DataGridColumns>
						<DataGridMultiSelectColumn TItem="TList" Width="30px"></DataGridMultiSelectColumn>
						<DataGridCommandColumn TItem="TList" NewCommandAllowed="BasicActions.NewAction" EditCommandAllowed="BasicActions.EditAction" DeleteCommandAllowed="BasicActions.DeleteAction">
							<NewCommandTemplate>
								<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Add"></Icon>&nbsp;@context.LocalizationString</Button>
							</NewCommandTemplate>
							<EditCommandTemplate>
								<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Edit"></Icon>&nbsp;@context.LocalizationString</Button>
							</EditCommandTemplate>
							<SaveCommandTemplate>
								<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" PreventDefaultOnSubmit Clicked="@context.Clicked">@context.LocalizationString</Button>
							</SaveCommandTemplate>
							<DeleteCommandTemplate>
								<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Delete"></Icon>&nbsp;@context.LocalizationString</Button>
							</DeleteCommandTemplate>
							<CancelCommandTemplate>
								<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked">@context.LocalizationString</Button>
							</CancelCommandTemplate>
							<ClearFilterCommandTemplate>
								<Button Size="Size.ExtraSmall" Color="Color.Dark" Margin="Margin.Is1" Outline="true" Clicked="@context.Clicked"><Icon Name="IconName.Clear"></Icon>&nbsp;@context.LocalizationString</Button>
							</ClearFilterCommandTemplate>
						</DataGridCommandColumn>
						@foreach (var fld in ListVisibleFields)
						{
							switch (fld.FieldType)
							{
								case BlazorGenerator.Enum.FieldType.Numeric:
									<BlazorGenerator.Components.Partials.DataGridNumeric T="TList" Field="fld"/>
									break;
								case BlazorGenerator.Enum.FieldType.Boolean:
									<BlazorGenerator.Components.Partials.DataGridCheckbox T="TList" Field="fld" />
									break;
								case BlazorGenerator.Enum.FieldType.Custom:
									<BlazorGenerator.Components.Partials.DataGridCustom T="TList" Field="fld" />
									break;
								case BlazorGenerator.Enum.FieldType.Select:
									<BlazorGenerator.Components.Partials.DataGridDropdown T="TList" Field="fld" />
									break;
								case BlazorGenerator.Enum.FieldType.Button:
									break;

								case BlazorGenerator.Enum.FieldType.Icon:
									<BlazorGenerator.Components.Partials.DataGridIcon T="TList" Field="fld" />
									break;

								default:
									<DataGridColumn TItem="TList"
										Field="@fld.Name"
										Caption="@fld.Caption"
										Sortable="true"
										Filterable="true" Editable="true" Displayable="@(!fld.EditOnly)" />
									break;
							}
						}
					</DataGridColumns>

				</DataGrid>
			</CardBody>
		</Card>
	</LayoutContent>
</Layout>

<Modal @ref="@ModalRef" Closing="OnModalClose">
	<ModalContent Centered Size="@modalSize">
		<ModalHeader>
			<CloseButton />
		</ModalHeader>
		<ModalBody ChildContent="@ChildModalContent" />
	</ModalContent>
</Modal>