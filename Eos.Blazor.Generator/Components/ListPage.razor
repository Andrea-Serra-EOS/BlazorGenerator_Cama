@{
  var PageActions = AttributesUtils.GetMethodsWithAttribute<PageActionAttribute>(this);
  var BasicActions = AttributesUtils.GetModelsWithAttribute<BasicActionsAttribute>(this).FirstOrDefault() ?? new BasicActionsAttribute(false,false,false);
}
@typeparam T

<Layout>
    <LayoutHeader>
         <ActionBar PageActions="@PageActions" Context="this"></ActionBar>
    </LayoutHeader>
    <LayoutContent>
        <DataGrid TItem="T"
                  @ref="@_datagrid"
                  Data="@Data"
                  SelectionMode="DataGridSelectionMode.Multiple"
                  @bind-SelectedRows="@SelectedRecs"
                  Resizable="true"
                  Striped="true"
                  ShowPager="false"
                  ShowPageSizes="false"
                  PageSize="int.MaxValue"
                  Filterable="true"
                  Responsive="true"
                  Narrow="true"
                  Editable
                  EditMode="DataGridEditMode.Inline"
                  NewItemCreator="@(() => CreateNewItem())"  
                  RowInserted="@OnInsert"
                  RowRemoved="@OnDelete"
                  RowUpdated="@OnModify"
                  CommandMode="DataGridCommandMode.Commands">
            
            <DataGridColumns>
                <DataGridCommandColumn TItem="T" NewCommandAllowed="BasicActions.NewAction" EditCommandAllowed="BasicActions.EditAction" DeleteCommandAllowed="BasicActions.DeleteAction">
                    <NewCommandTemplate>
                        <Button Size="Size.ExtraSmall" Color="Color.Dark" Outline="true" Clicked="@context.Clicked"><span class="oi oi-plus" aria-hidden="true"></span>&nbsp;@context.LocalizationString</Button>
                    </NewCommandTemplate>
                    <EditCommandTemplate>
                        <Button Size="Size.ExtraSmall" Color="Color.Dark" Outline="true" Clicked="@context.Clicked"><span class="oi oi-pencil" aria-hidden="true"></span>&nbsp;@context.LocalizationString</Button>
                    </EditCommandTemplate>
                    <SaveCommandTemplate>
                        <Button Size="Size.ExtraSmall" Color="Color.Dark" Outline="true" PreventDefaultOnSubmit Clicked="@context.Clicked">@context.LocalizationString</Button>
                    </SaveCommandTemplate>
                    <DeleteCommandTemplate>
                        <Button Size="Size.ExtraSmall" Color="Color.Dark" Outline="true" Clicked="@context.Clicked"><span class="oi oi-trash" aria-hidden="true"></span>&nbsp;@context.LocalizationString</Button>
                    </DeleteCommandTemplate>
                    <CancelCommandTemplate>
                        <Button Size="Size.ExtraSmall" Color="Color.Dark" Outline="true" Clicked="@context.Clicked">@context.LocalizationString</Button>
                    </CancelCommandTemplate>
                    <ClearFilterCommandTemplate>
                        <Button Size="Size.ExtraSmall" Color="Color.Dark" Outline="true" Clicked="@context.Clicked"><span class="oi oi-cirlce-x" aria-hidden="true"></span>&nbsp;@context.LocalizationString</Button>
                    </ClearFilterCommandTemplate>
                </DataGridCommandColumn>
                @foreach (var fld in VisibleFields)
                {
                    switch (fld.Type)
                    {
                        case Generator.Enum.FieldType.Numeric:
                            <DataGridNumericColumn TItem="T"
                                                   Field="@fld.Name"
                                                   Caption="@fld.Caption"
                                                   Sortable="true"
                                                   Filterable="true" Editable="true">
                            </DataGridNumericColumn>
                            break;
                        case Generator.Enum.FieldType.Boolean:
                            <DataGridCheckColumn TItem="T" Field="@fld.Name" Caption="@fld.Caption" Sortable="true" Filterable="true">
                                <DisplayTemplate>
                                    <Check TValue="bool"
                                           Checked="@((bool)fld.Getter(context))" />
                                </DisplayTemplate>
                            </DataGridCheckColumn>
                            break;
                        default:
                            <DataGridColumn TItem="T"
                                            Field="@fld.Name"
                                            Caption="@fld.Caption"
                                            Sortable="true"
                                            Filterable="true" Editable="true" />
                            break;
                    }
                }
            </DataGridColumns>

        </DataGrid>
    </LayoutContent>
</Layout>