@{
    var PageActions = AttributesUtils.getMethodsWithAttribute<PageAction>(this);
}
@typeparam T

<Layout>
    <LayoutHeader>
        <Row>
            @foreach (var action in PageActions)
            {
                <Button Color="Color.Dark" Outline="true" @onclick="@(() => action.Method.Invoke(this, null))">
                    <span class="@action.Attribute.Icon" aria-hidden="true"></span>
                    @(action.Attribute.Caption ?? action.Method.Name)
                </Button>
            }
        </Row>
    </LayoutHeader>
    <LayoutContent>
        <DataGrid TItem="T"
                  @ref="@_datagrid"
                  Data="@Data"
                  SelectionMode="DataGridSelectionMode.Multiple"
                  @bind-SelectedRows="@SelectedRecs"
                  Resizable="true"
                  Striped="true"
                  ShowPager="false"
                  ShowPageSizes="false"
                  PageSize="int.MaxValue"
                  Filterable="true"
                  Responsive="true"
                  Narrow="true"
                  Bordered="true">

            @foreach (var fld in VisibleFields)
            {
                switch (fld.Type)
                {
                    case Generator.Enum.FieldType.Numeric:
                        <DataGridNumericColumn TItem="T"
                                               Field="@fld.Name"
                                               Caption="@fld.Caption"
                                               Sortable="true"
                                               Filterable="true"
                                               Editable="@fld.Editable"
                                               Readonly="@(!fld.Editable)" />
                        break;
                    case Generator.Enum.FieldType.Boolean:
                        <DataGridCheckColumn TItem="T" Field="@fld.Name" Caption="@fld.Caption" Sortable="true" Filterable="true">
                            <DisplayTemplate>
                                <Check TValue="bool"
                                       Checked="@((bool)fld.Getter(context))"
                                       Disabled="@(!fld.Editable)"
                                       ReadOnly="@(!fld.Editable)" />
                            </DisplayTemplate>
                        </DataGridCheckColumn>
                        break;
                    default:
                        <DataGridColumn TItem="T"
                                        Field="@fld.Name"
                                        Caption="@fld.Caption"
                                        Sortable="true"
                                        Filterable="true"
                                        Editable="@fld.Editable"
                                        Readonly="@(!fld.Editable)" />
                        break;
                }
            }
        </DataGrid>
    </LayoutContent>
</Layout>