@{
    var VisibleProp = AttributesUtils.getPropertiesWithAttribute<Visible>(this);
    var PageActions = AttributesUtils.getMethodsWithAttribute<PageAction>(this);
    var Subforms = AttributesUtils.getPropertiesWithAttribute<Subform>(this);
}

<nav class="navbar navbar-expand-lg bg-light">
    <!-- Links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link btn btn-light @(((isEditable ? "active" : "")))" @onclick="@(() => Edit())">Edit</a>
        </li>
        @foreach (var test in PageActions)
        {
            <li class="nav-item">
                <a class="nav-link btn btn-light" @onclick="@(() => test.Method.Invoke(this, null))">
                    <span class="@test.Attribute.Icon" aria-hidden="true"></span>
                    @(test.Attribute.Caption ?? test.Method.Name)
                </a>
            </li>
        }
    </ul>
</nav>

<div class="container">
    @{
        <div class="row">
            @foreach (var prop in VisibleProp)
            {
            <div class="col-md-6">
                <div class="form-group row">
                    <label for="@prop.Property.Name" class="col-md-5 col-form-label">@(prop.Attribute.Caption ?? prop.Property.Name):</label>
                    <input class="form-control col-md-6"
                           name="@prop.Property.Name"
                           value="@prop.Property.GetValue(Data)"
                           @onchange="@((e) => { ReflectionUtilites.SetPropertyValueFromString(Data, prop.Property, (string)e.Value); })"
                           readonly="@(!isEditable)" />
                </div>
            </div>
            }
        </div>
    }
</div>

@{

    foreach (var item in Subforms)
    {
        <hr />
        <h2>@item.Property.Name</h2>
        var f = new RenderFragment(builder =>
        {
            builder.OpenComponent(0, item.Property.PropertyType);
            builder.CloseComponent();
        });

        @f

    }
}

@code {
    public dynamic Data { get; set; }
    bool isEditable = false;

    void Edit()
    {
        isEditable = !isEditable;
    }

}
