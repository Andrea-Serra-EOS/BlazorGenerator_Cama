
<div>
    <CascadingValue Value="this" IsFixed="true">
      <FluentStack HorizontalGap="0" Style="min-width: 100px; max-width:300px;">
        <FluentButton Appearance="@Appearance" OnClick="@OnClick"
                      Style="border-top-right-radius: 0 !important; border-bottom-right-radius: 0 !important;" IconStart="Icon">
          @Title
        </FluentButton>
        <FluentButton Id="@id"
                      Style="border-top-left-radius: 0 !important; border-bottom-left-radius: 0 !important;"
                      IconEnd="@(new Icons.Regular.Size16.ChevronDown())"
                      Appearance="@Appearance"
                      OnClick="@(() => OpenMenu = !OpenMenu)" />



        <FluentMenu Anchor="@id" @bind-Open="OpenMenu"  Style="min-width: 100px; max-width:300px;" HorizontalPosition="HorizontalPosition.Start">
          @ChildContent
        </FluentMenu>
      </FluentStack>
    </CascadingValue>
</div>

@code {
  bool OpenMenu = false;
  string id = Identifier.NewId();


  [Parameter]
  public RenderFragment? ChildContent { get; set; }

  [Parameter]
  public string? Title { get; set; }

  [Parameter]
  public EventCallback<MouseEventArgs> OnClick { get; set; }


  [Parameter]
  public Appearance Appearance { get; set; }

  [Parameter]
  public Icon? Icon { get; set; }

}